
**Step-by-Step Integration Guide: ESP32 LightTrack with Home Assistant**

**Phase 1: ESP32 Code Configuration (`main.cpp`)**

1.  **Open your `main.cpp` file** in your code editor (e.g., VS Code with PlatformIO).
2.  **Locate the MQTT & Home Assistant Configuration Block:**
    It's near the top, marked with:
    ```cpp
    // ############################################################################
    // ##               MQTT & HOME ASSISTANT CONFIGURATION                    ##
    // ############################################################################
    ```
3.  **Configure Wi-Fi Credentials:**
    *   Modify `main_wifi_ssid`: Replace `"YOUR_WIFI_SSID"` with the **name (SSID) of your home Wi-Fi network** where your Home Assistant server is also connected.
        ```cpp
        const char* main_wifi_ssid = "MyHomeWiFi"; // Example
        ```
    *   Modify `main_wifi_password`: Replace `"YOUR_WIFI_PASSWORD"` with the **password for your home Wi-Fi network**.
        ```cpp
        const char* main_wifi_password = "MySecurePassword123"; // Example
        ```
4.  **Configure MQTT Broker (Home Assistant Server):**
    *   Modify `mqtt_server`: Replace `"IP_OF_YOUR_HA_MACHINE"` with the **actual IP address of your Home Assistant machine** on your local network.
        *   *How to find HA IP:* Check your router's connected clients list, or use a network scanning tool. If you access HA via `http://homeassistant.local:8123`, your computer can resolve this; the ESP32 needs the direct IP.
        ```cpp
        const char* mqtt_server = "192.168.1.100"; // Example: Replace with YOUR HA's IP
        ```
    *   `mqtt_port`: Usually remains `1883`. Only change if you've configured Mosquitto on a different port.

5.  **Configure MQTT User Credentials:**
    *   **Important:** You will create this user in Home Assistant in Phase 2. For now, decide on a username and a strong password.
    *   Modify `mqtt_user`: Replace `"HA_MQTT_USER"` with the **username you will create in Home Assistant** specifically for MQTT access.
        ```cpp
        const char* mqtt_user = "lighttrack_mqtt"; // Example username
        ```
    *   Modify `mqtt_pass`: Replace `"HA_MQTT_PASSWORD"` with the **password for that dedicated HA user**.
        ```cpp
        const char* mqtt_pass = "aVeryStrongMqttPassword!"; // Example password
        ```
6.  **Save the `main.cpp` file.**
7.  **Compile and Upload the Code to your ESP32:**
    *   Connect the ESP32 board to your computer.
    *   Use PlatformIO's "Upload" command.
8.  **Open Serial Monitor:**
    *   Use PlatformIO's "Serial Monitor" (baud rate 115200). This is crucial for debugging. You should see it trying to connect to your Wi-Fi and then to the MQTT broker (which will likely fail until Phase 2 is complete, but Wi-Fi should connect).

**Phase 2: Home Assistant Configuration**

1.  **Install Mosquitto Broker Add-on (if not already installed):**
    *   In Home Assistant, go to "Settings" > "Add-ons" > "Add-on store".
    *   Search for "Mosquitto broker" and install it.
    *   Once installed, **Start** the Mosquitto broker add-on.
    *   Check its "Log" tab to ensure it starts without errors.

2.  **Configure Mosquitto Add-on to Use Home Assistant Users:**
    *   Go to the "Configuration" tab of the Mosquitto broker add-on.
    *   Find the `logins:` section. **Ensure this section is empty:**
        ```yaml
        logins: []
        ```
        (If it has entries, delete them. This tells Mosquitto to use Home Assistant users for authentication).
    *   Find the `anonymous:` setting. Ensure it is set to `false` (or that the line is deleted/commented out, as `false` is the default when `logins: []` is used).
        ```yaml
        anonymous: false 
        ```
    *   Click "SAVE" at the bottom of the Mosquitto add-on configuration.
    *   **Restart** the Mosquitto broker add-on (go to its "Info" tab and click "RESTART"). Check the "Log" tab again for errors.

3.  **Create a Dedicated Home Assistant User for MQTT:**
    *   In Home Assistant, go to "Settings" > "People" > "Users" tab.
    *   Click the "+ ADD USER" button (usually bottom right).
    *   **Display Name:** Enter a descriptive name (e.g., `MQTT LightTrack User`).
    *   **Username:** Enter the **exact same username** you configured in the ESP32's `main.cpp` for `mqtt_user` (e.g., `lighttrack_mqtt`).
    *   **Password:** Enter the **exact same password** you configured in the ESP32's `main.cpp` for `mqtt_pass`. Confirm the password.
    *   Ensure "User can log in" is enabled.
    *   You can choose not to allow this user to administer Home Assistant if it's solely for MQTT.
    *   Click "CREATE".

4.  **Configure/Check Home Assistant's MQTT Integration:**
    *   Go to "Settings" > "Devices & Services".
    *   Look for an existing "MQTT" integration card.
        *   **If it's not there:** Click "+ ADD INTEGRATION", search for "MQTT", and select it. It should automatically discover your Mosquitto add-on. You likely won't need to enter broker details manually if the add-on is running correctly and configured as above. Click "SUBMIT".
        *   **If it is there:** Click "CONFIGURE" on the MQTT card. It should show that it's connected to your broker. If it shows errors or asks for broker details, it might not be correctly configured with the Mosquitto add-on. You might need to re-configure it (often involves deleting and re-adding if it can't find the broker).
    *   **Important for Discovery:** The ESP32 code uses the default discovery prefix `homeassistant`. Ensure your MQTT integration in HA is also using this (it's the default). You can check this in the MQTT integration's configuration options if needed.

**Phase 3: Verification and Troubleshooting**

1.  **Restart your ESP32** (or it might have reconnected already).
2.  **Check ESP32 Serial Monitor Logs:**
    *   Look for:
        *   Successful Wi-Fi connection: `WiFi connected! IP address: ...`
        *   Attempts to connect to MQTT: `MQTT Attempting connection to [Your_HA_IP_Address] (Client ID: lighttrack_XXXXXX)...`
        *   Successful MQTT connection: `MQTT connected!`
        *   Subscription to command topic: `MQTT Subscribed to command topic: lighttrack/lighttrack_XXXXXX/set`
        *   Discovery message publication: `MQTT Pub Discovery to homeassistant/light/lighttrack_XXXXXX/config` and `Discovery published successfully.`
        *   Availability and State publications.

3.  **Check Mosquitto Broker Add-on Logs in Home Assistant:**
    *   Go to "Settings" > "Add-ons" > "Mosquitto broker" > "Log" tab.
    *   You should see connection attempts from the ESP32's client ID (e.g., `lighttrack_XXXXXX`).
    *   Look for lines like: `New client connected from [ESP32_IP_Address] as lighttrack_XXXXXX (p2, c1, k60, u'lighttrack_mqtt').` (The username `lighttrack_mqtt` should match what you configured).

4.  **Check Home Assistant for the Device:**
    *   Go to "Settings" > "Devices & Services".
    *   Click on the "MQTT" integration. You should see a link like "1 device" (or more if you have other MQTT devices).
    *   Your `LightTrack XXXXXX` device (where XXXXXX are the last 3 bytes of its MAC address) should appear.
    *   Click on the device name.
    *   You should see one entity (e.g., `light.lighttrack_xxxxxx`).
    *   Click on this entity to see its controls.

5.  **Test Control:**
    *   Add the `light.lighttrack_xxxxxx` entity to one of your Home Assistant dashboards (Lovelace).
    *   Try controlling it:
        *   Turn On/Off.
        *   Change brightness.
        *   Change color.
        *   Select an effect from the "Effect" dropdown list (e.g., "Solid", "Background", "Schedule", "Stationary").
    *   Observe the ESP32's physical LEDs and the Serial Monitor logs for corresponding actions and MQTT messages.

**Common Troubleshooting Steps:**

*   **ESP32 Not Connecting to Wi-Fi:**
    *   Double-check Wi-Fi SSID and password in `main.cpp` (case-sensitive).
    *   Ensure ESP32 has good Wi-Fi signal.
    *   Check router for MAC filtering or other restrictions.
*   **ESP32 Not Connecting to MQTT (e.g., `MQTT connect failed, rc=-2`, `rc=3`, `rc=4`, `rc=5`):**
    *   `rc=-2` (Network error/DNS fail): Verify `mqtt_server` IP address in `main.cpp` is correct and reachable from ESP32. Ensure Mosquitto add-on is running. Check firewall on HA machine (though unlikely for local connections if HA itself is accessible).
    *   `rc=3` (Server unavailable): Mosquitto broker add-on might not be running or accessible.
    *   `rc=4` (Bad username/password): MQTT username/password in `main.cpp` **do not exactly match** the user created in HA. Double-check case sensitivity.
    *   `rc=5` (Not authorized):
        *   Mosquitto add-on "Configuration" tab: `logins: []` is not empty, or `anonymous: true` is set when it shouldn't be. Restart Mosquitto after changes.
        *   The HA user for MQTT might not have been created correctly.
        *   The MQTT integration in HA might not be correctly configured to use the add-on.
*   **Device Not Appearing in Home Assistant (but ESP32 logs say MQTT connected):**
    *   MQTT Integration in HA: Is it running and connected to the broker?
    *   ESP32 Logs: Was the "Discovery" message published successfully? (e.g., `Discovery published successfully.`)
    *   Mosquitto Logs: Did Mosquitto receive the discovery message on a topic like `homeassistant/light/lighttrack_XXXXXX/config`?
    *   HA MQTT Integration Settings: Ensure "Discovery prefix" is `homeassistant` (default).
    *   Wait a minute or two; sometimes discovery takes a short while.
*   **"nan%" for Intensity in Serial Logs on First Boot:**
    *   This is often due to an empty or freshly formatted EEPROM/SPIFFS. The code now has safeguards to load defaults if `nan` is read. Subsequent reboots should show correct values. If it persists, ensure `loadSettings()` is called correctly and SPIFFS is mounted.

---

Follow these steps carefully, paying close attention to the Serial Monitor and Mosquitto logs, and you should have your LightTrack integrated with Home Assistant! Good luck!
